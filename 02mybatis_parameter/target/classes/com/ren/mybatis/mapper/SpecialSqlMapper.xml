<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace对应mapper接口的全类型 -->
<mapper namespace="com.ren.mybatis.mapper.SpecialSqlMapper">
    <!-- sql语句填写区 例：<select id="mapper接口中的方法" resultType="数据类型全类名/别名">sql语句</select>-->

    <!-- List<User> getUserByLike(@Param("mohu") String mohu); -->
    <select id="getUserByLike" resultType="User">
        <!-- SELECT * FROM t_user WHERE username LIKE '%${mohu}%' -->
        <!-- SELECT * FROM t_user WHERE username LIKE CONCAT('%',#{mohu},'%') -->
        SELECT * FROM t_user WHERE username LIKE "%"#{mohu}"%"
    </select>

    <!-- Integer deleteMoreUser(@Param("ids") String ids); //ids: 9,10 -->
    <delete id="deleteMoreUser">
        DELETE
        FROM t_user
        WHERE id IN (${ids})
    </delete>

    <!-- List<User> getUserList(@Param("tableName") String tableName); -->
    <select id="getUserList" resultType="User">
        SELECT *
        FROM ${tableName}
    </select>

    <!--
      useGenerateKeys：表示当前添加功能使用自增的主键
      keyProperty：将添加的数据的自增主键为实体类类型的参数的属性赋值
    -->
    <!-- Integer insertUser(User user); -->
    <insert id="insertUser">
        INSERT INTO t_user (username, password, age, gender, email)
        VALUES (#{username},#{password},#{age},#{gender},#{email})
    </insert>
</mapper>
