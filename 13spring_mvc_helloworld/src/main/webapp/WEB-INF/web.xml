<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!--
       配置springMVC的前端控制器 DispatcherServlet
       SpringMVC的配置文件默认的位置和名称：
         位置：WEB-INF下
         名称：<servlet-name>-servlet.xml  ， 当前配置下的配置文件名为 SpringMVC-servlet.xml
       url-pattern中/和/*的区别：
        / ： 匹配浏览器向服务器发送的所有请求（不包括.jsp）
        /* ： 匹配历览器向服务器发送的所有请求（包括.jsp）
       -->
    <servlet>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 设置springMVC的配置文件的位置和名称，此时springMVC位置在resources下 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        <!-- 将DispatcherServlet初始化时间提前到服务器启动时
            作为框架的核心组件，在启动过程中有大量的初始化操作要做
            而这些操作放在第一次请求时才执行会严重影响访问速度
            因此需要通过此标签将启动控制DispatcherServlet的初始化时间提前到服务器启动时
         -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <!-- 此处的设置为 进行匹配前端发送的请求 可以设置为 .do /*等 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>

